{"ast":null,"code":"var _jsxFileName = \"/home/tk-lpt-754/MindHeaven/src/components/RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './style/RegisterPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistrationPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '',\n    // Note: backend currently doesn't store name\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (formData.password !== formData.confirmPassword) {\n      alert('Passwords do not match!');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: formData.email,\n          password: formData.password\n        })\n      });\n      const data = await response.json();\n      setLoading(false);\n      if (!response.ok) {\n        alert(data.error || 'Registration failed');\n        return;\n      }\n\n      // Store token + user in localStorage\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.user));\n\n      // Redirect to test page\n      navigate('/test');\n    } catch (error) {\n      console.error('Error registering:', error);\n      setLoading(false);\n      alert('Something went wrong. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registration-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Your Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Full Name\",\n          value: formData.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email Address\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirmPassword\",\n          placeholder: \"Confirm Password\",\n          value: formData.confirmPassword,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? 'Registering...' : 'Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistrationPage, \"Q3pNCQQCM7S/xigHsa2YhgHd/HU=\", false, function () {\n  return [useNavigate];\n});\n_c = RegistrationPage;\nexport default RegistrationPage;\nvar _c;\n$RefreshReg$(_c, \"RegistrationPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","RegistrationPage","_s","navigate","formData","setFormData","name","email","password","confirmPassword","loading","setLoading","handleChange","e","target","value","handleSubmit","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","data","json","ok","error","localStorage","setItem","token","user","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","disabled","_c","$RefreshReg$"],"sources":["/home/tk-lpt-754/MindHeaven/src/components/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './style/RegisterPage.css';\n\nconst RegistrationPage = () => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '', // Note: backend currently doesn't store name\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (formData.password !== formData.confirmPassword) {\n      alert('Passwords do not match!');\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const response = await fetch('http://localhost:5000/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email: formData.email,\n          password: formData.password,\n        }),\n      });\n\n      const data = await response.json();\n      setLoading(false);\n\n      if (!response.ok) {\n        alert(data.error || 'Registration failed');\n        return;\n      }\n\n      // Store token + user in localStorage\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.user));\n\n      // Redirect to test page\n      navigate('/test');\n    } catch (error) {\n      console.error('Error registering:', error);\n      setLoading(false);\n      alert('Something went wrong. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"registration-page\">\n      <div className=\"form-container\">\n        <h2>Create Your Account</h2>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Full Name\"\n            value={formData.name}\n            onChange={handleChange}\n            required\n          />\n\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email Address\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n          />\n\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={formData.password}\n            onChange={handleChange}\n            required\n          />\n\n          <input\n            type=\"password\"\n            name=\"confirmPassword\"\n            placeholder=\"Confirm Password\"\n            value={formData.confirmPassword}\n            onChange={handleChange}\n            required\n          />\n\n          <button type=\"submit\" disabled={loading}>\n            {loading ? 'Registering...' : 'Register'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default RegistrationPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}